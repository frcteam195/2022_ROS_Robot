<launch>

  <node name="rio_control_node" pkg="rio_control_node" type="rio_control_node" clear_params="true" respawn="true" output="screen">
    <rosparam command="load" file="/mnt/working/2022_ROS_Robot/params/rio_control_node.yaml" />
  </node>

  <node name="drivetrain_node" pkg="drivetrain_node" type="drivetrain_node" output="screen" respawn="true" clear_params="true">
    <rosparam command="load" file="/mnt/working/2022_ROS_Robot/params/drivetrain_node.yaml" />
  </node>
  <node pkg="tf2_ros" type="static_transform_publisher" name="map_identity" args="0 0 0 0 0 0 odom map" respawn="true" />
  <node name="ukf_se" pkg="robot_localization" type="ukf_localization_node" clear_params="true" output="screen" respawn="true">
    <rosparam command="load" file="/mnt/working/2022_ROS_Robot/params/robot_localization_ukf.yaml" />
  </node>

  <node name="local_planner_node" pkg="local_planner_node" type="local_planner_node" clear_params="true" output="screen" respawn="true">
    <rosparam command="load" file="/mnt/working/2022_ROS_Robot/params/teb_local_planner.yaml" />
  </node>

  <node name="action_processor_node" pkg="action_processor_node" type="action_processor_node" clear_params="true" output="screen" respawn="true">
  </node>

  <node name="autonomous_node" pkg="autonomous_node" type="autonomous_node" clear_params="true" output="screen" respawn="true">
  </node>

<!--
  <node name="dashboard_interface_node" pkg="dashboard_interface_node" type="dashboard_interface_node" clear_params="true" output="screen" respawn="true">
  </node>
-->

  <node name="turret_node" pkg="turret_node" type="turret_node" clear_params="true" output="screen" respawn="true">
  </node>

  <node name="climber_node" pkg="climber_node" type="climber_node" clear_params="true" output="screen" respawn="true">
  </node>

  <node name="intake_node" pkg="intake_node" type="intake_node" clear_params="true" output="screen" respawn="true">
  </node>

  <node name="field_element_publisher_node" pkg="field_element_publisher_node" type="field_element_publisher_node" clear_params="true" output="screen" respawn="true">
  </node>

  <!--Meters/Radians XYZRPY-->
  <!--Must have one for every limelight with proper names-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="limelight_link"      args="0.254 0 0 -0.0523599 -0.463 0.0 turret_link limelight_link" respawn="true" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="limelight_unaligned" args="0.254 0 0 -0.0523599 0 0.0 turret_link limelight_unaligned" respawn="true" />
  <node name="limelight_vision_node" pkg="limelight_vision_node" type="limelight_vision_node" clear_params="true" output="screen" respawn="true">
    <!--Enter comma separated list of limelight names-->
    <rosparam param="limelight_names">[limelight]</rosparam>
    <rosparam param="enable_publish_position_data">true</rosparam>
  </node>

  <node name="network_tables_node" pkg="network_tables_node" type="network_tables_node" clear_params="true" output="screen" respawn="true">
  </node>

  <node name="hmi_agent_node" pkg="hmi_agent_node" type="hmi_agent_node" clear_params="true" output="screen" respawn="true">
    <rosparam command="load" file="/mnt/working/2022_ROS_Robot/params/hmi_agent_node_drive_attack3.yaml" />
    <rosparam command="load" file="/mnt/working/2022_ROS_Robot/params/hmi_agent_node_arm_extreme3d.yaml" />
    <rosparam command="load" file="/mnt/working/2022_ROS_Robot/params/hmi_agent_node_buttonbox1.yaml" />
    <rosparam command="load" file="/mnt/working/2022_ROS_Robot/params/hmi_agent_node_buttonbox2.yaml" />
  </node>

<?ignore
  <include file="/mnt/working/2022_ROS_Robot/launch/rs_aligned_depth.launch">
  </include>
?>

<?ignore
  <include file="/mnt/working/2022_ROS_Robot/launch/rtabmap.launch">
    <arg name="rtabmap_args" value="--delete_db_on_start"/>
    <arg name="depth_topic" value="/camera/aligned_depth_to_color/image_raw"/>
    <arg name="rgb_topic" value="/camera/color/image_raw"/>
    <arg name="camera_info_topic" value="/camera/color/camera_info"/>
    <arg name="approx_sync" value="true"/>
    <arg name="visual_odometry" value="false"/>
    <arg name="odom_topic" value="/odometry/filtered"/>
    <arg name="queue_size" value="100"/>
  </include>
?>

</launch>
